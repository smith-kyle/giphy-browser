{"version":3,"sources":["redux/utils.js","redux/selectors.js","constants.js","redux/actions.js","redux/actionTypes.js","components/presentational/QueryBar.js","components/containers/QueryBarContainer.js","components/presentational/Loading.js","components/containers/LoadingContainer.js","components/presentational/Gallery.js","components/containers/GalleryContainer.js","components/presentational/Lightbox.js","components/containers/LightboxContainer.js","components/App.js","serviceWorker.js","redux/reducers/gifs.js","redux/reducers/forms.js","redux/reducers/window.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["appendURLParams","_url","params","url","URL","search","URLSearchParams","windowStateSelector","store","window","windowWidthSelector","createSelector","_ref","width","windowHeightSelector","_ref2","height","gifsStateSelector","gifs","gifsSelector","_ref3","gifsByIdSelector","R","acc","_ref4","id","rest","Object","objectWithoutProperties","objectSpread","defineProperty","selectedGifSelector","_ref5","gifsById","selectedId","selectedGifUrlSelector","_ref6","selectedUrl","offsetSelector","formsStateSelector","forms","querySelector","_ref7","query","isLoadingSelector","_ref8","isLoading","shouldUseQuerySelector","giphyRequestDefaults","api_key","gifsUrlSelector","offset","shouldUseQuery","GIPHY_BASE_URL","q","setIsLoading","type","payload","setSelectedGif","setSelectedGifUrl","fetchGifs","debounce","dispatch","getState","fetch","then","response","json","data","catch","e","console","error","withStyles","theme","root","bar","position","zIndex","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","onChange","children","react_default","a","createElement","className","AppBar_default","Toolbar_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","value","mapDispatchToProps","target","connect","state","presentational_QueryBar","marginTop","minHeight","CircularProgress_default","Loading","flexWrap","overflow","li","listStyle","padding","imageWrapper","cursor","image","top","transform","getNextPage","onClickImage","windowHeight","windowWidth","galleryEl","useRef","useEffect","lastSeenGalleryEl","handleScroll","_ref2$target","scrollTop","scrollHeight","clientHeight","current","addEventListener","removeEventListener","ref","style","map","gif","key","onClick","src","images","fixed_height_small","alt","LoadingContainer","selectedGif","original","blob","createObjectURL","selectGif","Gallery","maxWidth","maxHeight","gifUrl","close","event","stopPropagation","presentational_Loading","Lightbox","onComponentDidMount","handleResize","innerHeight","innerWidth","results","flexDirection","QueryBarContainer","GalleryContainer","LightboxContainer","Boolean","location","hostname","match","initialState","combineReducers","arguments","length","undefined","action","concat","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3d79617.chunk.js","sourcesContent":["export const appendURLParams = (_url, params) => {\n  const url = new URL(_url);\n  url.search = new URLSearchParams(params);\n  return url;\n};\n","import { createSelector } from \"reselect\";\nimport * as R from \"ramda\";\n\nimport { appendURLParams } from \"./utils\";\nimport {\n  GIPHY_SEARCH_URL,\n  GIPHY_TRENDING_URL,\n  GIPHY_API_KEY\n} from \"../constants\";\n\nexport const windowStateSelector = store => store.window;\n\nexport const windowWidthSelector = createSelector(\n  windowStateSelector,\n  ({ width }) => width\n);\n\nexport const windowHeightSelector = createSelector(\n  windowStateSelector,\n  ({ height }) => height\n);\n\nexport const gifsStateSelector = store => store.gifs;\n\nexport const gifsSelector = createSelector(\n  gifsStateSelector,\n  ({ gifs }) => gifs\n);\n\nexport const gifsByIdSelector = createSelector(\n  gifsSelector,\n  R.reduce((acc, { id, ...rest }) => ({ ...acc, [id]: { id, ...rest } }), {})\n);\n\nexport const selectedGifSelector = createSelector(\n  gifsStateSelector,\n  gifsByIdSelector,\n  ({ selectedId }, gifsById) =>\n    selectedId === null ? null : gifsById[selectedId]\n);\n\nexport const selectedGifUrlSelector = createSelector(\n  gifsStateSelector,\n  ({ selectedUrl }) => selectedUrl\n);\n\nexport const offsetSelector = createSelector(\n  gifsSelector,\n  R.length\n);\n\nexport const formsStateSelector = store => store.forms;\n\nexport const querySelector = createSelector(\n  formsStateSelector,\n  ({ query }) => query\n);\n\nexport const isLoadingSelector = createSelector(\n  formsStateSelector,\n  ({ isLoading }) => isLoading\n);\n\nexport const shouldUseQuerySelector = createSelector(\n  querySelector,\n  R.pipe(\n    R.equals(\"\"),\n    R.not\n  )\n);\n\nconst giphyRequestDefaults = { api_key: GIPHY_API_KEY };\n\nexport const gifsUrlSelector = createSelector(\n  offsetSelector,\n  shouldUseQuerySelector,\n  querySelector,\n  (offset, shouldUseQuery, query) =>\n    shouldUseQuery\n      ? appendURLParams(GIPHY_SEARCH_URL, {\n          ...giphyRequestDefaults,\n          q: query,\n          offset\n        })\n      : appendURLParams(GIPHY_TRENDING_URL, { ...giphyRequestDefaults, offset })\n);\n","export const GIPHY_API_KEY = \"QGD7tgrph7TOmMoTcoxuQVgzxLiYuERS\";\nexport const GIPHY_BASE_URL = \"https://api.giphy.com\";\nexport const GIPHY_SEARCH_PATH = \"/v1/gifs/search\";\nexport const GIPHY_SEARCH_URL = GIPHY_BASE_URL + GIPHY_SEARCH_PATH;\nexport const GIPHY_TRENDING_PATH = \"/v1/gifs/trending\";\nexport const GIPHY_TRENDING_URL = GIPHY_BASE_URL + GIPHY_TRENDING_PATH;\n\nexport const QUERY_BAR_HEIGHT = 64;\n","import fetch from \"cross-fetch\";\nimport debounce from \"lodash.debounce\";\n\nimport {\n  SET_QUERY,\n  ADD_GIFS,\n  SET_IS_LOADING,\n  CLEAR_GIFS,\n  SET_SELECTED_GIF,\n  SET_SELECTED_GIF_URL\n} from \"./actionTypes\";\nimport { gifsUrlSelector, selectedGifSelector } from \"./selectors\";\n\nexport const addGifs = gifs => ({\n  type: ADD_GIFS,\n  payload: gifs\n});\n\nexport const setIsLoading = isLoading => ({\n  type: SET_IS_LOADING,\n  payload: isLoading\n});\n\nexport const setSelectedGif = id => ({\n  type: SET_SELECTED_GIF,\n  payload: id\n});\n\nexport const setSelectedGifUrl = url => ({\n  type: SET_SELECTED_GIF_URL,\n  payload: url\n});\n\nexport const selectGif = id => (dispatch, getState) => {\n  dispatch(setSelectedGif(id));\n  const selectedGif = selectedGifSelector(getState());\n  return fetch(selectedGif.images.original.url)\n    .then(response => response.blob())\n    .then(blob => dispatch(setSelectedGifUrl(URL.createObjectURL(blob))));\n};\n\nconst _fetchGifs = (dispatch, getState) => {\n  const url = gifsUrlSelector(getState());\n  return fetch(url)\n    .then(response => response.json())\n    .then(({ data }) => dispatch(addGifs(data)))\n    .then(() => dispatch(setIsLoading(false)))\n    .catch(e => {\n      console.error(e);\n      dispatch(setIsLoading(false));\n    });\n};\n\nexport const fetchGifs = debounce(_fetchGifs, 400);\n\nexport const setQuery = ({ target: { value: payload } }) => dispatch => {\n  dispatch({\n    type: SET_QUERY,\n    payload\n  });\n  dispatch({ type: CLEAR_GIFS });\n  dispatch(setIsLoading(true));\n  return dispatch(fetchGifs);\n};\n","export const ADD_GIFS = \"ADD_GIFS\";\nexport const CLEAR_GIFS = \"CLEAR_GIFS\";\nexport const SET_SELECTED_GIF = \"SET_SELECTED_GIF\";\nexport const SET_SELECTED_GIF_URL = \"SET_SELECTED_GIF_URL\";\n\nexport const SET_QUERY = \"SET_QUERY\";\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\n\nexport const SET_WINDOW_DIMS = \"SET_WINDOW_DIMS\";\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport { QUERY_BAR_HEIGHT } from \"../../constants\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  bar: {\n    height: QUERY_BAR_HEIGHT,\n    position: \"relative\",\n    zIndex: 2\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n});\n\nconst QueryBar = props => {\n  const { classes, query, onChange, children } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.bar} position=\"static\">\n        <Toolbar>\n          <Typography\n            className={classes.title}\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n          >\n            Giphy Search\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              onChange={onChange}\n              value={query}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      {children}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(QueryBar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { querySelector } from \"../../redux/selectors\";\nimport { setQuery } from \"../../redux/actions\";\nimport QueryBar from \"../presentational/QueryBar\";\n\nconst mapStateToProps = state => ({\n  query: querySelector(state)\n});\n\nconst mapDispatchToProps = {\n  onChange: setQuery\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(props => <QueryBar {...props} />);\n","import React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10,\n    minHeight: 100\n  }\n};\n\nconst Loading = ({ classes, color, isLoading }) => (\n  <div className={classes.root}>\n    {isLoading ? <CircularProgress color={color} /> : null}\n  </div>\n);\n\nexport default withStyles(styles)(Loading);\n","import { connect } from \"react-redux\";\n\nimport { isLoadingSelector } from \"../../redux/selectors\";\nimport Loading from \"../presentational/Loading\";\n\nconst mapStateToProps = state => ({\n  isLoading: isLoadingSelector(state)\n});\n\nexport default connect(mapStateToProps)(Loading);\n","import React, { useRef, useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { QUERY_BAR_HEIGHT } from \"../../constants\";\nimport LoadingContainer from \"../containers/LoadingContainer\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    overflow: \"scroll\",\n    justifyContent: \"flex-start\"\n  },\n  li: {\n    width: \"31%\",\n    height: 164,\n    listStyle: \"none\",\n    padding: \"1%\"\n  },\n  imageWrapper: {\n    overflow: \"hidden\",\n    cursor: \"pointer\",\n    height: \"100%\",\n    display: \"block\",\n    position: \"relative\"\n  },\n  image: {\n    top: \"50%\",\n    position: \"relative\",\n    transform: \"translateY(-50%)\",\n    width: \"100%\"\n  }\n};\n\nconst Gallery = ({\n  classes,\n  gifs,\n  getNextPage,\n  onClickImage,\n  windowHeight,\n  windowWidth\n}) => {\n  const galleryEl = useRef(null);\n  useEffect(() => {\n    const handleScroll = ({\n      target: { scrollTop, scrollHeight, clientHeight }\n    }) => {\n      if (scrollTop + clientHeight >= scrollHeight) {\n        getNextPage();\n      }\n    };\n    let lastSeenGalleryEl;\n    if (galleryEl.current) {\n      lastSeenGalleryEl = galleryEl.current;\n      lastSeenGalleryEl.addEventListener(\"scroll\", handleScroll);\n    }\n    return () =>\n      lastSeenGalleryEl\n        ? lastSeenGalleryEl.removeEventListener(\"scroll\", handleScroll)\n        : null;\n  });\n  return (\n    <div\n      className={classes.root}\n      ref={galleryEl}\n      style={{\n        width: windowWidth,\n        height: windowHeight - QUERY_BAR_HEIGHT\n      }}\n    >\n      {gifs.map(gif => (\n        <li className={classes.li} key={gif.id}>\n          <div\n            className={classes.imageWrapper}\n            onClick={() => onClickImage(gif.id)}\n          >\n            <img\n              className={classes.image}\n              src={gif.images.fixed_height_small.url}\n              style={{}}\n              alt={gif.title}\n            />\n          </div>\n        </li>\n      ))}\n      <LoadingContainer />\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Gallery);\n","import { connect } from \"react-redux\";\n\nimport {\n  gifsSelector,\n  windowWidthSelector,\n  windowHeightSelector\n} from \"../../redux/selectors\";\nimport { fetchGifs, setIsLoading, selectGif } from \"../../redux/actions\";\nimport Gallery from \"../presentational/Gallery\";\n\nconst mapStateToProps = state => ({\n  gifs: gifsSelector(state),\n  windowHeight: windowHeightSelector(state),\n  windowWidth: windowWidthSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getNextPage: () => {\n    dispatch(setIsLoading(true));\n    dispatch(fetchGifs);\n  },\n  onClickImage: id => dispatch(selectGif(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Gallery);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Loading from \"./Loading\";\n\nconst styles = {\n  root: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(0,0,0, 0.7)\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    display: \"flex\",\n    height: \"100%\",\n    width: \"100%\",\n    top: 0,\n    zIndex: 3\n  },\n  image: {\n    display: \"block\",\n    maxWidth: \"80%\",\n    maxHeight: \"90%\",\n    width: \"auto\",\n    height: \"auto\"\n  }\n};\n\nconst Lightbox = ({ classes, gif, gifUrl, close }) => {\n  if (!gif) return null;\n  return (\n    <div className={classes.root} onClick={close}>\n      {gifUrl ? (\n        <img\n          alt={gif.title}\n          className={classes.image}\n          onClick={event => event.stopPropagation()}\n          src={gifUrl}\n          width={gif.images.original.width}\n          height={gif.images.original.height}\n        />\n      ) : (\n        <Loading color=\"secondary\" isLoading />\n      )}\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Lightbox);\n","import { connect } from \"react-redux\";\n\nimport {\n  selectedGifSelector,\n  selectedGifUrlSelector\n} from \"../../redux/selectors\";\nimport Lightbox from \"../presentational/Lightbox\";\nimport { setSelectedGif, setSelectedGifUrl } from \"../../redux/actions\";\n\nconst mapStateToProps = state => ({\n  gif: selectedGifSelector(state),\n  gifUrl: selectedGifUrlSelector(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  close: () => {\n    dispatch(setSelectedGif(null));\n    dispatch(setSelectedGifUrl(null));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Lightbox);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport debounce from \"lodash.debounce\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport QueryBarContainer from \"./containers/QueryBarContainer\";\nimport GalleryContainer from \"./containers/GalleryContainer\";\nimport { SET_WINDOW_DIMS } from \"../redux/actionTypes\";\nimport { fetchGifs, setIsLoading } from \"../redux/actions\";\nimport LightboxContainer from \"./containers/LightboxContainer\";\n\nconst mapDispatchToProps = dispatch => ({\n  onComponentDidMount: () => {\n    const handleResize = debounce(\n      () =>\n        dispatch({\n          type: SET_WINDOW_DIMS,\n          payload: { height: window.innerHeight, width: window.innerWidth }\n        }),\n      100\n    );\n\n    dispatch(setIsLoading(true));\n    dispatch(fetchGifs);\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }\n});\n\nconst styles = {\n  results: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    position: \"relative\",\n    zIndex: 1\n  }\n};\n\nconst App = ({ classes, onComponentDidMount }) => {\n  useEffect(onComponentDidMount, []);\n  return (\n    <div>\n      <QueryBarContainer>\n        <div className={classes.results}>\n          <GalleryContainer />\n        </div>\n      </QueryBarContainer>\n      <LightboxContainer />\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  ADD_GIFS,\n  CLEAR_GIFS,\n  SET_SELECTED_GIF,\n  SET_SELECTED_GIF_URL\n} from \"../actionTypes\";\n\nconst initialState = {\n  gifs: [],\n  selectedId: null,\n  selectedUrl: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ADD_GIFS: {\n      return {\n        ...state,\n        gifs: state.gifs.concat(action.payload)\n      };\n    }\n    case CLEAR_GIFS: {\n      return {\n        ...state,\n        gifs: []\n      };\n    }\n    case SET_SELECTED_GIF: {\n      return {\n        ...state,\n        selectedId: action.payload\n      };\n    }\n    case SET_SELECTED_GIF_URL: {\n      return {\n        ...state,\n        selectedUrl: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_IS_LOADING, SET_QUERY } from \"../actionTypes\";\n\nconst initialState = {\n  query: \"\",\n  isLoading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_QUERY: {\n      return {\n        ...state,\n        query: action.payload\n      };\n    }\n    case SET_IS_LOADING: {\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_WINDOW_DIMS } from \"../actionTypes\";\n\nconst initialState = {\n  height: window.innerHeight,\n  width: window.innerWidth\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_WINDOW_DIMS: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n\nimport gifs from \"./gifs\";\nimport forms from \"./forms\";\nimport window from \"./window\";\n\nexport default combineReducers({ forms, gifs, window });\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}